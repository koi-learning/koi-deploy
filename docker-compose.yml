version: '3.7'
services:
  db:
    container_name: koi-db-serv
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: koiserver
      MYSQL_USER: koi
      MYSQL_PASSWORD: koikoi
    networks:
      - shared-net
    volumes:
      - mysql-data:/var/lib/mysql
    restart: unless-stopped

  # the koi-api-service
  # it handles all REST-requests and accesses the MySQL-server locally
  koi-api:
    image: ghcr.io/koi-learning/koi-api:0.4.5
    
    # start MySQL when starting this service
    depends_on:
      - db
    
    # set the configuration to use the local MySQL-instance
    environment:
      KOI_SQLALCHEMY_DATABSE_URI: mysql+pymysql://koi:koikoi@db/koiserver
      KOI_FILEPERSISTENCE_BASE_URI: /apifiles

    networks:
      - shared-net

    volumes:
      - sample-data:/apifiles

    # as MySQL will need some time to start, restart the service while 
    restart: unless-stopped

  # the worker service
  # this will run a single instance of the worker-process
  koi-worker:
    image: ghcr.io/koi-learning/koi-core-tf:0.4.3
    
    # start the koi-api when starting this service
    depends_on:
      - koi-api

    networks:
      - shared-net

    # disable logs
    environment:
      TF_CPP_MIN_LOG_LEVEL: "3"

    command: -s=http://koi-api:8080 -u=admin -p=admin -l=INFO
    restart: unless-stopped

  # the webserver serving the pwa and forwarding the api
  koi-pwa:
    image: ghcr.io/koi-learning/koi-pwa:1.3.0
    
    # start the koi-api when starting this service
    depends_on:
      - koi-api
    
    environment:
      API_URL: http://koi-api:8080
    
    ports:
      - "80:80"
    
    networks:
      - shared-net
    restart: unless-stopped

volumes:
  sample-data:
  mysql-data:

networks:
  shared-net: